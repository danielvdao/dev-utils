filetype off
set rtp+=~/.vim/bundle/Vundle.vim
set rtp+=/usr/local/opt/fzf
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'jremmen/vim-ripgrep'
Plugin 'tpope/vim-sleuth'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-fugitive'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'luochen1990/rainbow'
Plugin 'junegunn/fzf.vim'

" nerd tree remaps
map <C-h> :tabp<CR>
map <C-l> :tabn<CR>

" keyboard remaps
inoremap jk <Esc> " remap normal mode to jk, my wrist hurts
let mapleader = ','
nmap <leader><space> :call DeleteTrailingWS()<CR>
nmap <leader>d :NERDTreeToggle<CR> " remap nerdtree toggle
nmap <leader>pi :PluginInstall<CR> " typing is hard
nmap <leader>r :Rg
nmap <leader>s :FZF<CR> " FZF search
nmap <leader>e :e<CR> " reload current file

" format JSON
map <C-j> :$!python -mjson.tool<CR>

call vundle#end()
filetype plugin indent on
colorscheme Tomorrow-Night-Eighties
syntax on
set hlsearch " hlsearch lists everything when searching
set nu " line nu
set smartcase
set list
set ruler
set listchars=tab:▸\ ,trail:▫,nbsp:·
set directory-=. " don't store swapfiles in the current directory

" set syntax checkers
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
set bs=indent,eol,start     " Backspace over everything in insert mode
set paste " set paste spacing
set mouse-=a " removes the visual select mode
let g:syntastic_javascript_checkers = ['eslint'] " JS syntax checker
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0 " this keeps the list on all the time
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1

let g:rainbow_active = 1 "0 if you want to enable it later via :RainbowToggle

set wildignore+=*/.git/*,*/tmp/*,*.swp " set to ignore for ripgrep

" need either macvim or --with-client-server from normal vim overridden via
" brew to use this feature
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif

" delete trailing white spaces
func! DeleteTrailingWS()
  exe "normal mz"
  %s/\s\+$//ge
  exe "normal `z"
endfunc

" ctrlp settings
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$\|\.yardoc\|public\/images\|public\/system\|data\|log\|tmp$',
  \ 'file': '\.exe$\|\.so$\|\.dat$'
  \ }

let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
" set up rg quickfix windows
if executable('rg')
  set grepprg=rg\ --color=never
  let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
  let g:ctrlp_use_caching = 0
endif

" dont destroy current buffer in quickfix
set switchbuf+=usetab,newtab

set nocompatible
set ttyfast
